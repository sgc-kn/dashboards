var l=Object.defineProperty;var i=(n,e)=>l(n,"name",{value:e,configurable:!0});var r,s;import u from"../../_npm/jszip@3.10.1/74d78a45.js";import{AbstractFile as f}from"../stdlib.576a058a.js";var y=Object.defineProperty,a=i((n,e)=>y(n,"name",{value:e,configurable:!0}),"s");const c=(r=class{constructor(e){Object.defineProperty(this,"_",{value:e}),this.filenames=Object.keys(e.files).filter(t=>!e.files[t].dir)}static async from(e){return new r(await u.loadAsync(e))}file(e){const t=this._.file(e=`${e}`);if(!t||t.dir)throw new Error(`file not found: ${e}`);return new b(t)}},i(r,"r"),r);a(c,"ZipArchive");let h=c;const o=(s=class extends f{constructor(e){super(e.name),Object.defineProperty(this,"_",{value:e}),Object.defineProperty(this,"_url",{writable:!0})}async url(){return this._url||(this._url=this.blob().then(URL.createObjectURL))}async blob(){return this._.async("blob")}async arrayBuffer(){return this._.async("arraybuffer")}async text(){return this._.async("text")}async json(){return JSON.parse(await this.text())}},i(s,"i"),s);a(o,"ZipArchiveEntry");let b=o;export{h as ZipArchive};
